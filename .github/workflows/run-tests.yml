name: Run Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'  # Запуск каждый день в полночь по UTC

jobs:
  test:
    runs-on: ubuntu-latest

    env:
      TEST_ENV: ${{secrets.TEST_ENV }}
      HEADLESS_MODE: ${{secrets.HEADLESS_MODE }}
      BASE_URL: ${{secrets.BASE_URL }}
      INVENTORY_URL: ${{secrets.INVENTORY_URL }}



    steps:
      - name: Cache Python dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-python-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-python-

      - name: Cache npm dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.12

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          npm install -g allure-commandline

      - name: Install Playwright Browsers
        run: |
          python -m playwright install  # This will download the necessary browsers

      - name: Prepare allure-results directory
        run: mkdir -p allure-results

      - name: Generate environment.properties
        run: |
          echo "TEST_ENV=$TEST_ENV" >> allure-results/environment.properties
          echo "HEADLESS_MODE=$HEADLESS_MODE" >> allure-results/environment.properties

      - name: Generate executor.json
        run: |
          echo '{
            "name": "GitHub Actions",
            "type": "CI",
            "url": "https://github.com/${{ github.repository }}/actions",
            "buildOrder": 1,
            "buildName": "Run #${{ github.run_number }}",
            "buildUrl": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}",
            "reportName": "Allure Report"
          }' > allure-results/executor.json

      - name: Copy previous history (if available)
        run: |
          mkdir -p allure-results/history
          if [ -d allure-report/history ]; then
            cp -r allure-report/history/* allure-results/history/ || true
          fi

      - name: Run tests
        run: pytest --alluredir=allure-results
        continue-on-error: true

      - name: Generate Allure report
        run: allure generate allure-results --clean -o allure-report

      - name: Upload Allure Report as artifact
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: allure-report

      - name: List files in the current directory
        run: ls -alh

      - name: List files in allure-report
        run: ls -alh allure-report

      - name: Deploy to GitHub Pages
        if: github.ref == 'refs/heads/main'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: playwright_python_training/allure-report

      - name: ✅ Allure Report deployed
        run: echo
               "Allure report: https://barsovichok.github.io/playwright_python_training/"

